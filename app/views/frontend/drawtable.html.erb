<% @title="Stalker - Draw with interactive table" %>
<% content_for :stylesheet_includes do %>
  <%= stylesheet_link_tag '/frontend/css/slider.css'  %>

    <style type="text/css">
        body {
            cursor: none;
        }
    </style>
<% end %>
<% content_for :javascript_includes_in_head do %>
  <script>window["_GOOG_TRANS_EXT_VER"] = "1";</script>
<% end %>
<% content_for :javascript_includes do %>

    <%= javascript_include_tag "/frontend/js/libs/three.min.js" %>
    <%= javascript_include_tag "/frontend/js/libs/stats.min.js" %>
    <script src="http://yui.yahooapis.com/3.9.0/build/yui/yui-min.js"></script>
    <!--<%= javascript_include_tag "/frontend/js/libs/yui3/build/yui/yui-min.js" %>-->
    <%= javascript_include_tag "/frontend/js/libs/inputex/src/loader.js" %>
    <!--<script src="http://js.pusher.com/1.12/pusher.min.js"></script>-->

    <!-- Canvas dependencies -->
    <script src="/frontend/js/libs/tuiojs.js" type="text/javascript"></script>
    <script src="/frontend/js/libs/connect.js" type="text/javascript"></script>

    <script type="text/javascript">
        var events = new Array();
    </script>

    <%= javascript_include_tag "/frontend/js/slider.js" %>
    <%= javascript_include_tag "/frontend/js/canvas.js" %>
    <%= javascript_include_tag "/frontend/js/screensaver.js" %>
    <%= javascript_include_tag "/frontend/js/pusher.js" %>

    <script type="text/javascript">

        YUI_config.groups.inputex.base = "frontend/js/libs/inputex/src/";
        YUI_config.groups.inputex.filter = "raw";
        YUI_config.stalkerbase = "frontend/";

        YUI().use("io", "json", "widget", "base", "event-resize",
                "inputex-string", "inputex-select", "inputex-group",
                "inputex-list", "inputex-combine", "inputex-checkbox",
                "node-event-simulate", "transition",
                "stalker-slider", "stalker-canvas", "stalker-screensaver", "stalker-pusher",
        function(Y) {

            Y.on("domready", function() {
                var canvas, slider, screenSaver, dreamsToDisplay, screensaverIndex=0,first=true,
                    screenSaverRunning = false,
                    IDLETIMEOUT = 20000,
                    hash = window.location.hash,idleTimer, hideUI = function () {
                        Y.one("#draw-tool").hide(true);
                        Y.one("#draw-tool2").show(true);
                    }, resetUI = function() {
                        Y.one("#draw-tool").show(true);
                        Y.one("#draw-tool2").hide(true);

                        canvas.reset();
                        canvas.set("allowEdition", true);

                        slider.resetCamera();
                        slider.get("boundingBox").show(true);
                        slider.set("trackCam", false);

                        screenSaver.stop();
                    }, resetIdleTimer = function() {
                        if (idleTimer) {
                            idleTimer.cancel();
                        }
                        idleTimer = Y.later(IDLETIMEOUT, null, function() {
                            screenSaverRunning = true;
                            slider.get("boundingBox").hide(true, function () {
                                canvas.reset();
                                canvas.set("allowEdition", true);

                                slider.loadPicture(canvas.canvasNode.toDataURL("image/png"));// Show its image in the slider
                                slider.resetCamera();
                                slider.get("boundingBox").show(true);
                                hideUI();

                                screenSaver.run();
                            });
                        });
                    };

                resetIdleTimer();

                Y.one("#draw-tool2").hide();
                Y.one('#welcome').hide();

                canvas = new Y.Stalker.Canvas();                                // Render canvas (gets input from tuio)
                canvas.render();

                screenSaver = new Y.Stalker.ScreenSaver({
                    visible: false
                });
                screenSaver.anim.on("tween", function(e) {                      // Whenever screensaver anim is updated,
                    var node = e.target.get("node");
                    if (e.target.get("running")) {
                        canvas.onCursorUpdate([{x: node.getX() / Y.DOM.winWidth(), y: node.getY() / Y.DOM.winHeight()}]); //  draw it on the canvas
                    }
                });
                screenSaver.on("strokeEnd", function () {
                    canvas.onCursorRemove();
                });
                screenSaver.on("drawingEnd", function () {                      // When the drawing is complete
                     Y.log("ScreenSaver.drawingEnd");
                     Y.later(100, slider, slider.startImploding);               // explode it
                     resetIdleTimer();
                });
                screenSaver.render();

                var inviteState = 0,                                            // Change the draw invite every so much seconds
                    textState = 0,
                    INVITETEXTS = [
                        "Dessinez votre desir",                                 //
                        "Disegna il tuo desiderio",
                        "Draw your wish",
                        "Zeichnen Sie Ihre Wunsche",
                        "Desenati dorinta voastra",
                    ];
                Y.later(10000, null, function () {
                    var nodes = Y.one(".draw-invite").get("children");
                    nodes.item(inviteState).hide(true);
                    inviteState = (inviteState + 1 ) %2;
                    textState = (textState + 1 ) % INVITETEXTS.length;

                    nodes.item(inviteState).setHTML(INVITETEXTS[textState]);
                    nodes.item(inviteState).show(true);
                }, [], true);


                if (Y.hasWebgl()) {
                    canvas.hide();

                    slider = new Y.Stalker.Slider({
                        textureWidth: (hash.length > 1) ? +hash.substring(1) : 256, // 64, 128, 256, 512, 1024, 2048
                        showQr: false,
                        //trackCam: true,
                        slideshowRunning: false
                    });
                    slider.render();

                    //slider.loadAlbumFromService(window.location.origin + "/services/dreamssecretroom");// Load album
                    //slider.loadPicture(canvas.canvasNode.toDataURL("image/png"));

                    canvas.on("cursorUpdate", function() {
                        //Y.log("resetIdleTimer");
                        if (screenSaverRunning) {
                            screenSaverRunning = false;
                            resetUI();
                        };
                        resetIdleTimer();
                    });                                                         // Idle screen saver
                    canvas.on("update", function() {                            // When an input is done on the canvas
                        slider.doReload = true;
                    });
                    canvas.on("newDream", function() {                          // When canvas new dream button is pressed
                        resetUI();
                    });
                    canvas.on("reset", function() {                             // When canvas is resetted
                        slider.loadPicture(canvas.canvasNode.toDataURL("image/png"));// Show its image in the slider
                    });

                    canvas.on("saved", function() {                             // When the canvas is saved
                        slider.loadPicture(canvas.canvasNode.toDataURL("image/png"));// Show its image in the slider
                        //canvas.reset();
                        canvas.set("allowEdition", false);
                        slider.set("trackCam", true);

                        Y.one("#particleCanvas").simulate("mouseup");
                        slider.resetCamera();
                        //slider.set("trackCam", true);
                        hideUI();
                        Y.later(1000, slider, slider.startImploding);
                    });

                    var toggled = false;                                        // Debug mode, toggle canvas/slider on enter key press
                    Y.one('doc').on('key', function(e) {
                        toggled = !toggled;
                        canvas.set("visible", toggled);
                        slider.set("visible", !toggled);
                    }, 'enter');
                } else {

//                        canvas.on("saved", function() {                       // When the canvas is saved
//                            alert("Thank you for your submission");
//                        });
//                        Y.one('.loading').hide();
                    Y.one('.fail').show();
                }
            });
        });
    </script>

<% end %>

<div class="overlay" id="welcome">
    <div class="wrap">
        <div class="messagebox">

            <p class="loading" style="">Loading...</p>

            <p class="fail" style="display: none; ">
                Unfortunately, it seems that your system is currently unable to run WebGL required for this experiment. You may try installing the latest version of <a href="https://www.google.com/chrome">Chrome</a> or <a href="http://www.getfirefox.net/">Firefox</a> browsers. Visit this <a href="http://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">page</a> for more details on obtaining WebGL.
            </p>

        </div>
    </div>
</div>

<div id="draw-tool">
    <img class="controls" id="envoyer" src="/frontend/img/UI_send.png" />
    <img class="controls" id="undo" src="/frontend/img/UI_undo.png" />
    <img class="controls" id="trash" src="/frontend/img/UI_trash.png" />
</div>
<div id="draw-tool2">
    <div class="draw-invite"><div>Dessinez votre desir</div><div></div></div>
    <img class="controls" id="newpage" src="/frontend/img/UI_newpage.png" />
</div>
