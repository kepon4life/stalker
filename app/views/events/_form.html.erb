<% content_for :javascript_includes do %>
  <%= javascript_include_tag "/javascripts/events_form.js" %>
<% end %>

<% content_for :javascript_includes_in_head do %>
      <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
      <script>
      var geocoder;
      var map;
      function initialize() {
          
          geocoder = new google.maps.Geocoder();
          var mapOptions = {
            center: new google.maps.LatLng(46.7833, 6.65),
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          var input = /** @type {HTMLInputElement} */(document.getElementById('event_address'));

          var input_address_url = /** @type {HTMLInputElement} */(document.getElementById('event_address_url'));

          map = new google.maps.Map(document.getElementById('map-canvas'),mapOptions);

          if(input.value != ""){
            codeAddress(input.value);
          }

          
          var autocomplete = new google.maps.places.Autocomplete(input);

          console.log(input);

          autocomplete.bindTo('bounds', map);

          var infowindow = new google.maps.InfoWindow();
          var marker = new google.maps.Marker({
            map: map
          });

          

          google.maps.event.addListener(autocomplete, 'place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            input.className = '';
            var place = autocomplete.getPlace();

            input_address_url.value = place.url;

            console.log(place);

            if (!place.geometry) {
                // Inform the user that the place was not found and return.
                input.className = 'notfound';
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(13);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
    
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
                address = [
                  (place.address_components[0] && place.address_components[0].short_name || ''),
                  (place.address_components[1] && place.address_components[1].short_name || ''),
                  (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
          });
        

        
      }

      google.maps.event.addDomListener(window, 'load', initialize);


      function codeAddress(address) {
        geocoder.geocode( { 'address': address}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
            map.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
              map: map,
              position: results[0].geometry.location
            });
          } else {
            alert("Geocode was not successful for the following reason: " + status);
          }
        });
      }
    </script>

<% end %>

<% if @event.errors.any? %>
    <% content_for :form_errors do %>
      <ul>
        <% @event.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
    <% end %>
  <% end %>
<%= form_for(@event,:html => { :class => "form-horizontal", :multipart => true }) do |f| %>
<fieldset>
  <div class="control-group">
    <%= f.label :name, :class => "control-label" %>
    <div class="controls">
      <%= f.text_field :name %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :description, :class => "control-label" %>
    <div class="controls">
      <%= f.text_field :description %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :address, :class => "control-label" %>
    <div class="controls">
      <%= f.text_field :address %>
      <%= f.hidden_field :address_url %>
    </div>
  </div>
  <div id="map-canvas" style="width:400px; height:300px;"></div>
  <div class="control-group">
    <%= f.label :is_active, "Is active", :class => "control-label" %>
    <div class="controls">
      <%= f.check_box :is_active, :id => "form-events-is_active" %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :display_only_accepted, "Display only accepted dreams", :class => "control-label" %>
    <div class="controls">
      <%= f.check_box :display_only_accepted, :id => "form-events-display_only_accepted" %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :image, "Image", :class => "control-label" %>
    <div class="controls">
      <%= f.file_field :image %>
    </div>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
  </fieldset>
<% end %>
